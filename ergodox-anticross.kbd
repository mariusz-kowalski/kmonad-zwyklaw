(defcfg
	input  (device-file "/dev/input/by-id/usb-ZSA_Technology_Labs_Ergodox_EZ-event-kbd")
	output (uinput-sink "KMonad ergo")
	cmp-seq ralt
	cmp-seq-delay 5

	fallthrough true
	allow-cmd true
	implicit-around around
)

#| ------------------------------------------------------------------SRC------------------------------------------------------------------------------- |#
(defsrc

esc	1	2	3	4	5	f11						f12	6	7	8	9	0	bspc
tab	q	w	e	r	t	-						;	y	u	i	o	p	del
lshift	a	s	d	f	g								h	j	k	l	f4	ins
'	z	x	c	v	b	ret						kprt	n	m	\	f5	[	pgup
`	f1	=	f2	f3										f6	/	.	f10	pgdn

							left	right		home	end
								lalt		up
						spc	lctrl	lmeta		down	,	ralt

)



#| -----------------------------------------------------------------ALIAS------------------------------------------------------------------------------ |#
(defalias

	esc	(tap-hold	250	esc	( tap-macro C-esc )	)
	tab	(tap-hold	250	tab	( tap-macro C-tab )	)

	f1	(tap-hold	250	!	( tap-macro ! ret )	)
	f2	(tap-hold	250	?	( tap-macro ? ret )	)
	f3	(tap-hold	250	;	( tap-macro ^ )	)
	f4	(tap-hold	250	{	( tap-macro } )	)
	f6	(tap-hold	250	~	( tap-macro < )	)
	f5	(tap-hold	250	|	( tap-macro | | left )	)
	f10	(tap-hold	250	\(	( tap-macro \) )	)
	f11	(tap-hold	250	*	( tap-macro f11 )	)
	f12	(tap-hold	250	#	( tap-macro f12 )	)

	1	(tap-hold	250	1	( tap-macro f1 )	)
	2	(tap-hold	250	2	( tap-macro f2 )	)
	3	(tap-hold	250	3	( tap-macro f3 )	)
	4	(tap-hold	250	4	( tap-macro f4 )	)
	5	(tap-hold	250	5	( tap-macro f5 )	)
	6	(tap-hold	250	6	( tap-macro f6 )	)
	7	(tap-hold	250	7	( tap-macro f7 )	)
	8	(tap-hold	250	8	( tap-macro f8 )	)
	9	(tap-hold	250	9	( tap-macro f9 )	)
	0	(tap-hold	250	0	( tap-macro f10 )	)

	q	(tap-hold	250	q	( tap-macro RA-q )	)
	w	(tap-hold	250	w	( tap-macro RA-w )	)
	e	(tap-hold	250	e	( tap-macro RA-e )	)
	r	(tap-hold	250	r	( tap-macro RA-r )	)
	t	(tap-hold	250	t	( tap-macro RA-t )	)
	y	(tap-hold	250	y	( tap-macro RA-y )	)
	u	(tap-hold	250	u	( tap-macro RA-u )	)
	i	(tap-hold	250	i	( tap-macro RA-i )	)
	o	(tap-hold	250	o	( tap-macro RA-o )	)
	p	(tap-hold	250	p	( tap-macro RA-p )	)

	a	(tap-hold	250	a	( tap-macro RA-a )	)
	s	(tap-hold	250	s	( tap-macro RA-s )	)
	d	(tap-hold	250	d	( tap-macro RA-d )	)
	f	(tap-hold	250	f	( tap-macro RA-f )	)
	g	(tap-hold	250	g	( tap-macro RA-g )	)
	h	(tap-hold	250	h	( tap-macro RA-h )	)
	j	(tap-hold	250	j	( tap-macro RA-j )	)
	k	(tap-hold	250	k	( tap-macro RA-k )	)
	l	(tap-hold	250	l	( tap-macro RA-l )	)

	z	(tap-hold	250	z	( tap-macro RA-z )	)
	x	(tap-hold	250	x	( tap-macro RA-x )	)
	c	(tap-hold	250	c	( tap-macro RA-c )	)
	v	(tap-hold	250	v	( tap-macro RA-v )	)
	b	(tap-hold	250	b	( tap-macro RA-b )	)
	n	(tap-hold	250	n	( tap-macro RA-n )	)
	m	(tap-hold	250	m	( tap-macro RA-m )	)

	spc	(tap-hold	250	spc	lshift	)
	bspc	(tap-hold	250	bspc	( tap-macro C-bspc )	)
	del	(tap-hold	250	del	( tap-macro C-del )	)
	ins	(tap-hold	250	$	( tap-macro } )	)
	pgup	(tap-hold	250	@	( tap-macro ] )	)
	pgdn	(tap-hold	250	&	( tap-macro \) )	)

	left	(tap-hold	250	C-left	( tap-macro left )	)
	right	(tap-hold	250	C-right	( tap-macro right )	)
	up	(tap-hold	250	up	( tap-macro pgup )	)
	down	(tap-hold	250	down	( tap-macro pgdn )	)

	home	(tap-hold	250	left	( tap-macro home )	)
	end	(tap-hold	250	right	( tap-macro end )	)

	-	(tap-hold	250	-	(layer-toggle lay1)	)
	;	(tap-hold	250	:	(layer-toggle lay1)	)
	'	(tap-hold	250	'	( tap-macro % q \( \) left )	)
	\	(tap-hold	250	\	( tap-macro % r \( \) left )	)
	[	(tap-hold	250	[	( tap-macro ] )	)
	`	(tap-hold	250	`	( tap-macro + )	)
	=	(tap-hold	250	=	( tap-macro spc = = spc )	)
	/	(tap-hold	250	/	( tap-macro % )	)
	.	(tap-hold	250	.	( tap-macro > )	)
	,	(tap-hold	250	,	( tap-macro rctrl )	)

	lshift	(tap-hold	250     "	( tap-macro % Q \( \) left )	)
	ret	(tap-hold	250	ret	( tap-macro S-ret )	)
	kprt	(tap-hold	250	kprt	( tap-macro C-kprt )	)
	lalt	(tap-hold	250	up	lalt	)
	lctrl	(tap-hold	250	\_	lctrl	)
	lmeta	(tap-hold	250	down	lmeta	)
	ralt	(tap-hold	250	spc	rshift	)
)



#| -----------------------------------------------------------------LAYER-0---------------------------------------------------------------------------- |#
(deflayer lay0

@esc	@1	@2	@3	@4	@5	@f11						@f12	@6	@7	@8	@9	@0	@bspc
@tab	q	w	@e	r	t	@-						@;	y	u	i	@o	p	@del
@lshift	@a	@s	d	f	g								h	j	k	@l	@f4	@ins
@'	@z	@x	@c	v	b	@ret						@kprt	@n	m	@\	@f5	@[	@pgup
@`	@f1	@=	@f2	@f3										@f6	@/	@.	@f10	@pgdn

							@left	@right		@home	@end
								@lalt		@up
						@spc	@lctrl	@lmeta		@down	@,	@ralt
)




#| -----------------------------------------------------------------LAYER-1---------------------------------------------------------------------------- |#
(deflayer lay1

power	_	_	_	_	brdn	brup						mute	vold	volu	prev	pp	next	_
wakeup	_	_	_	_	coffee	_						_	calc	_	_	_	_	_
sleep	_	_	_	_	_								_	_	_	_	_	_
_	_	_	_	_	_	_						_	_	_	_	_	_	_
_	_	_	_	_										_	_	_	_	_

							_	_		_	_
								_		_
						_	_	_		_	_	_
)
